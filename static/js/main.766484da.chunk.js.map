{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","map","recipe","key","id","src","image_url","alt","title","length","concat","substring","publisher","Link","to","pathname","recipe_id","state","API_KEY","App","_callee","e","recipeName","api_call","data","regenerator_default","wrap","_context","prev","next","target","elements","value","preventDefault","fetch","sent","json","_this","setState","console","log","stop","this","components_Form","components_Recipes","Component","Recipe","activeRecipe","componentDidMount","req","res","location","href","publisher_url","React","Router","BrowserRouter","Switch","Route","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.766484da.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = props => (\r\n  <form onSubmit={props.getRecipe} style={{ marginBottom: \"2rem\" }}>\r\n    <input className=\"form__input\" type=\"text\" name=\"recipeName\" />\r\n    <button className=\"form__button\">Search</button>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Recipes = props => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      {props.recipes.map((recipe) => {\r\n        return (\r\n          <div\r\n            key={recipe.id}\r\n            className=\"col-md-4\"\r\n            style={{ marginBottom: \"2rem\" }}\r\n          >\r\n            <div className=\"recipes__box\">\r\n              <img\r\n                className=\"recipe__box-img\"\r\n                src={recipe.image_url}\r\n                alt={recipe.title}\r\n              />\r\n              <div className=\"recipe__text\">\r\n                <h5 className=\"recipes__title\">\r\n                  {recipe.title.length < 20\r\n                    ? `${recipe.title}`\r\n                    : `${recipe.title.substring(0, 25)}...`}\r\n                </h5>\r\n                <p className=\"recipes__subtitle\">\r\n                  Publisher: <span>{recipe.publisher}</span>\r\n                </p>\r\n              </div>\r\n              <button className=\"recipe_buttons\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/recipe/${recipe.recipe_id}`,\r\n                    state: { recipe: recipe.title }\r\n                  }}\r\n                >\r\n                  View Recipe\r\n                </Link>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Recipes from \"./components/Recipes\";\n\nconst API_KEY = \"834355ec87c5822fad1900f9523ba34a\";\n\nclass App extends Component {\n  state = {\n    recipes: []\n  };\n  getRecipe = async e => {\n    const recipeName = e.target.elements.recipeName.value;\n    e.preventDefault();\n    const api_call = await fetch(\n      `https://www.food2fork.com/api/search?key=${API_KEY}&q=${recipeName}&count=10`\n    );\n\n    const data = await api_call.json();\n    this.setState({ recipes: data.recipes });\n    console.log(this.state.recipes);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Recipe Search</h1>\n        </header>\n        <Form getRecipe={this.getRecipe} />\n        <Recipes recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst API_KEY = \"834355ec87c5822fad1900f9523ba34a\";\r\n\r\nclass Recipe extends React.Component {\r\n  state = {\r\n    activeRecipe: []\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const title = this.props.location.state.recipe;\r\n    const req = await fetch(\r\n      `https://www.food2fork.com/api/search?key=${API_KEY}&q=${title}`\r\n    );\r\n\r\n    const res = await req.json();\r\n    this.setState({ activeRecipe: res.recipes[0] });\r\n    console.log(this.state.activeRecipe);\r\n  };\r\n  render() {\r\n    const recipe = this.state.activeRecipe;\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.activeRecipe.length !== 0 && (\r\n          <div className=\"active-recipe\">\r\n            <img\r\n              className=\"active-recipe__img\"\r\n              src={recipe.image_url}\r\n              alt={recipe.title}\r\n            />\r\n            <h3 className=\"active-recipe__title\">{recipe.title}</h3>\r\n            <h4 className=\"active-recipe__publisher\">\r\n              Publisher: <span>{recipe.publisher}</span>\r\n            </h4>\r\n            <p className=\"active-recipe__website\">\r\n              Website:\r\n              <span>\r\n                <a href={recipe.publisher_url}>{recipe.publisher_url}</a>\r\n              </span>\r\n            </p>\r\n            <button className=\"active-recipe__button\">\r\n              <Link to=\"/\">Go Home</Link>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} exact />\r\n      <Route path=\"/recipe/:id\" component={Recipe} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}